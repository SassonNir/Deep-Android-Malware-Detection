import os
import shutil


def dir_contain_assess(dir_path: str):
    dir_lists = os.listdir(dir_path)
    return "events" in dir_lists and "states" in dir_lists


if __name__ == '__main__':
    OUTPUT_DIR_PATH = './Output'
    VALID_DIR_PATH = './Valid'
    VALID_APPS_FILE = './valid.txt'

    if os.path.exists(VALID_DIR_PATH):
        shutil.rmtree(VALID_DIR_PATH)
    os.mkdir(VALID_DIR_PATH)

    valid_file = open(VALID_APPS_FILE, 'a')

    apps_dir_names = [file for file in os.listdir(OUTPUT_DIR_PATH)]

    valid_cnt = 0

    for app_dir_name in apps_dir_names:
        for app_compare_dir_name in apps_dir_names:
            if app_dir_name == app_compare_dir_name:
                continue

            if app_dir_name == f"{app_compare_dir_name}_after" or f"{app_dir_name}_after" == app_compare_dir_name:
                if dir_contain_assess(f"{OUTPUT_DIR_PATH}/{app_dir_name}") and dir_contain_assess(f"{OUTPUT_DIR_PATH}/{app_compare_dir_name}"):
                    valid_cnt += 1
                    print(f"{app_dir_name} {app_compare_dir_name}")

                    # copy valid directories to Valid directory
                    app_dir_path = f"{OUTPUT_DIR_PATH}/{app_dir_name}"
                    app_dir_compare_path = f"{OUTPUT_DIR_PATH}/{app_compare_dir_name}"
                    shutil.copytree(app_dir_path, f"{VALID_DIR_PATH}/{app_dir_name}", dirs_exist_ok=True)
                    shutil.copytree(app_dir_compare_path, f"{VALID_DIR_PATH}/{app_compare_dir_name}", dirs_exist_ok=True)

    print(f"valid: {int(valid_cnt/2)}")
    # for app_dir in apps_dir_names:
    #     app_path = f"{OUTPUT_DIR_PATH}/{app_dir}"
    #     app_dir_files = os.listdir(app_path)
    #     if "events" in app_dir_files and "states" in app_dir_files:
    #         shutil.copytree(app_path, VALID_DIR_PATH, dirs_exist_ok=True)
    #
    #         if not app_dir.endswith('_after'):
    #             valid_file.write(app_dir + '\n')